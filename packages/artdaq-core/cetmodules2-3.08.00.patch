diff --git a/CMakeLists.txt b/CMakeLists.txt
index 536ca45..4912a73 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,14 +12,15 @@
 #  make install
 #  make package
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
-cmake_minimum_required (VERSION 3.16)
 
 find_package(cetmodules)
 set(CET_CETBUILDTOOLS_COMPAT TRUE)
 include(Compatibility)
 set(CET_WARN_DEPRECATED)
 
+find_package(cetmodules 2.29.02 REQUIRED)
 project(artdaq_core VERSION 3.08.00)
 
 include(CetCMakeEnv)
@@ -32,17 +33,18 @@ cet_set_compiler_flags(DIAGS VIGILANT
 )
 
 # these are minimum required versions, not the actual product versions
-find_ups_boost(v1_53_0)
-find_ups_product( canvas v1_00_00 )
-find_ups_product( cetlib v1_08_00 )
-find_ups_product( cetpkgsupport v1_08_03 )
-find_ups_product( clhep v2_2_0 )
-find_ups_product( fhiclcpp v3_04_00 )
-find_ups_product( messagefacility v1_14_01 )
-find_ups_product( sqlite v3_08_05_00 )
-find_ups_product( tbb )
-find_ups_root( v5_34_20 )
-find_ups_product( TRACE v3_03_00 )
+find_package( Boost COMPONENTS thread)
+find_package( canvas ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( cetlib ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( cetpkgsupport ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( CLHEP ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( fhiclcpp ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( messagefacility ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( SQLite3 ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( TBB ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+
+find_package( ROOT )
+find_package( TRACE ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
 
 
 string(REGEX MATCHALL "[0-9][0-9]?[0-9]?" MESSAGEFACILITY_VERSION_LIST "$ENV{MESSAGEFACILITY_VERSION}")
@@ -75,19 +77,19 @@ if(BTYPE_UC STREQUAL DEBUG)
 		if($ENV{USE_ASAN} GREATER 0)
 			message("!!! Address Sanitizer Activated!!!")
 			add_compile_options(-fsanitize=address -Wno-unused-command-line-argument)
-			add_link_options(-lasan)
+			add_link_options(-lasan)  ### MIGRATE-ACTION-RECOMMENDED: use target_link_options()
 		endif()
 	endif()
 	if(DEFINED ENV{USE_TSAN})
 		if($ENV{USE_TSAN} GREATER 0)
 			message("!!! Thread Sanitizer Activated!!!")
 			add_compile_options(-fsanitize=thread -Wno-unused-command-line-argument)
-			add_link_options(-ltsan)
+			add_link_options(-ltsan)  ### MIGRATE-ACTION-RECOMMENDED: use target_link_options()
 		endif()
 	endif()
 	if(DEFINED ENV{USE_GCOV})
 		add_compile_options(-fprofile-arcs -ftest-coverage --coverage)
-		add_link_options(--coverage)
+		add_link_options(--coverage)  ### MIGRATE-ACTION-RECOMMENDED: use target_link_options()
 	endif()
 endif()
 
@@ -98,7 +100,7 @@ if(DEFINED ENV{USE_EXCEPTIONSTACKTRACE})
 		add_definitions(-D EXCEPTIONSTACKTRACE)
 		set( EXCEPTIONSTACKTRACE_LIB  artdaq-core_Utilities_ExceptionStackTrace )
 		add_compile_options( -rdynamic -Wno-unused-command-line-argument )
-		add_link_options( -rdynamic )
+		add_link_options( -rdynamic )  ### MIGRATE-ACTION-RECOMMENDED: use target_link_options()
 	endif()
 endif()
 
diff --git a/artdaq-core/Core/CMakeLists.txt b/artdaq-core/Core/CMakeLists.txt
index 4c7ca0e..cc81f1e 100644
--- a/artdaq-core/Core/CMakeLists.txt
+++ b/artdaq-core/Core/CMakeLists.txt
@@ -7,10 +7,10 @@
 # ----------------------------------------------------------------------
 # Build this project's library:
 
-cet_make(
+cet_make(  ### MIGRATE-ACTION-RECOMMENDED: use cet_make_library(), build_dictionary(), basic_plugin() with explicit source lists
   LIBRARIES
-  artdaq-core_Data
-  artdaq-core_Utilities
+  artdaq_core::artdaq-core_Data
+  artdaq_core::artdaq-core_Utilities
   pthread
   Boost::thread
   )
diff --git a/artdaq-core/Data/CMakeLists.txt b/artdaq-core/Data/CMakeLists.txt
old mode 100755
new mode 100644
index edd2893..3514ca6
--- a/artdaq-core/Data/CMakeLists.txt
+++ b/artdaq-core/Data/CMakeLists.txt
@@ -1,7 +1,7 @@
-cet_make(
+cet_make(  ### MIGRATE-ACTION-RECOMMENDED: use cet_make_library(), build_dictionary(), basic_plugin() with explicit source lists
 NO_DICTIONARY
   LIBRARIES
-  artdaq-core_Utilities
+  artdaq_core::artdaq-core_Utilities
   EXCLUDE Artdaq_fragmentNameHelper.cc
   )
 
@@ -9,7 +9,7 @@ basic_plugin(Artdaq "fragmentNameHelper" artdaq-core_Data)
 
 cet_remove_compiler_flags(-fsanitize=address -lasan)
 cet_remove_compiler_flags(-fsanitize=thread -ltsan)
-  art_dictionary(DICTIONARY_LIBRARIES artdaq-core_Data)
+  art_dictionary(DICTIONARY_LIBRARIES artdaq_core::artdaq-core_Data)
 
 install_headers(SUBDIRS detail)
 install_source(SUBDIRS detail)
diff --git a/artdaq-core/Generators/CMakeLists.txt b/artdaq-core/Generators/CMakeLists.txt
index afff33e..adda25e 100644
--- a/artdaq-core/Generators/CMakeLists.txt
+++ b/artdaq-core/Generators/CMakeLists.txt
@@ -1,7 +1,7 @@
 
-cet_make(
+cet_make(  ### MIGRATE-ACTION-RECOMMENDED: use cet_make_library(), build_dictionary(), basic_plugin() with explicit source lists
   LIBRARIES
-  artdaq-core_Data
+  artdaq_core::artdaq-core_Data
   )
 
 install_headers()
diff --git a/artdaq-core/Utilities/CMakeLists.txt b/artdaq-core/Utilities/CMakeLists.txt
index a527a61..873253c 100644
--- a/artdaq-core/Utilities/CMakeLists.txt
+++ b/artdaq-core/Utilities/CMakeLists.txt
@@ -1,11 +1,11 @@
 
-cet_make(
+cet_make(  ### MIGRATE-ACTION-RECOMMENDED: use cet_make_library(), build_dictionary(), basic_plugin() with explicit source lists
 	EXCLUDE GenFile_mfPlugin.cc ExceptionStackTrace.cc
   LIBRARIES
-  MF_MessageLogger
-  cetlib
-  cetlib_except
-  fhiclcpp
+  messagefacility::MF_MessageLogger
+  cetlib::cetlib
+  cetlib_except::cetlib_except
+  fhiclcpp::fhiclcpp
 	${EXCEPTIONSTACKTRACE_LIB}
 	Boost::filesystem
 )
@@ -19,10 +19,12 @@ cet_make_library(
 )
 
 basic_plugin( "GenFile" "mfPlugin"
-  MF_MessageLogger
-  cetlib
-  cetlib_except
-  fhiclcpp
+	LIBRARIES
+  messagefacility::MF_MessageLogger
+  cetlib::cetlib
+  cetlib_except::cetlib_except
+  fhiclcpp::fhiclcpp
+  TBB::tbb
 )
 
 install_headers()
diff --git a/doc/CMakeLists.txt b/doc/CMakeLists.txt
old mode 100755
new mode 100644
index c50cf77..915dcd6
--- a/doc/CMakeLists.txt
+++ b/doc/CMakeLists.txt
@@ -3,7 +3,7 @@ include(FindLATEX)
 
 SET(DOXYFILE_DIR ${CMAKE_CURRENT_LIST_DIR})
 function(create_pdf_documentation)
-	find_package(LATEX COMPONENTS PDFLATEX PS2PDF MAKEINDEX)
+	cet_find_package(LATEX COMPONENTS PDFLATEX PS2PDF MAKEINDEX)
 	find_program(EPSTOPDF_FOUND epstopdf)
 
 	if(LATEX_FOUND AND EPSTOPDF_FOUND)
diff --git a/test/Core/CMakeLists.txt b/test/Core/CMakeLists.txt
index 563271e..c89c1b8 100644
--- a/test/Core/CMakeLists.txt
+++ b/test/Core/CMakeLists.txt
@@ -2,11 +2,11 @@
 if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
 
 cet_test(SharedMemoryManager_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Core
+  LIBRARIES artdaq_core::artdaq-core_Core
   )
 cet_test(SharedMemoryFragmentManager_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Core 
-  artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Core 
+  artdaq_core::artdaq-core_Data
   )
 
-  endif()
\ No newline at end of file
+  endif()
diff --git a/test/Data/CMakeLists.txt b/test/Data/CMakeLists.txt
index bffd58e..a8ff6c1 100644
--- a/test/Data/CMakeLists.txt
+++ b/test/Data/CMakeLists.txt
@@ -1,20 +1,20 @@
 
 cet_test(Fragment_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Data
   )
 
 cet_test(ContainerFragment_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Data
   )
 
 cet_test(RawEvent_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Data
   )
 
 cet_test(BuildInfo_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Data
   )
 
 cet_test(FragmentNameHelper_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Data
-  )
\ No newline at end of file
+  LIBRARIES artdaq_core::artdaq-core_Data
+  )
diff --git a/test/Generators/CMakeLists.txt b/test/Generators/CMakeLists.txt
index 059e1af..ee64902 100644
--- a/test/Generators/CMakeLists.txt
+++ b/test/Generators/CMakeLists.txt
@@ -1,4 +1,4 @@
 
 cet_test(FragmentGenerator_t USE_BOOST_UNIT
-  LIBRARIES artdaq-core_Generators artdaq-core_Data
+  LIBRARIES artdaq_core::artdaq-core_Generators artdaq_core::artdaq-core_Data
   )
diff --git a/test/Utilities/CMakeLists.txt b/test/Utilities/CMakeLists.txt
index 73f8591..60fe360 100644
--- a/test/Utilities/CMakeLists.txt
+++ b/test/Utilities/CMakeLists.txt
@@ -1,30 +1,30 @@
 cet_test(TimeUtils_t USE_BOOST_UNIT
-	LIBRARIES artdaq-core_Utilities
+	LIBRARIES artdaq_core::artdaq-core_Utilities
 )
 
 cet_test(ExceptionHandler_t USE_BOOST_UNIT
-	LIBRARIES artdaq-core_Utilities
-	cetlib_except
-	${CANVAS}
+	LIBRARIES artdaq_core::artdaq-core_Utilities
+	cetlib_except::cetlib_except
+	canvas::canvas
 )
 
 cet_test(SimpleLookupPolicy_t USE_BOOST_UNIT
 	DATAFILES fcl/LookupTarget.fcl
-	LIBRARIES artdaq-core_Utilities
-  MF_MessageLogger
+	LIBRARIES artdaq_core::artdaq-core_Utilities
+  messagefacility::MF_MessageLogger
 )
 
 cet_test(ExceptionStackTrace_t USE_BOOST_UNIT
-	LIBRARIES artdaq-core_Utilities_ExceptionStackTrace
-  MF_MessageLogger
+	LIBRARIES artdaq_core::artdaq-core_Utilities_ExceptionStackTrace
+  messagefacility::MF_MessageLogger
 )
 
 cet_test(configureMessageFacility_t USE_BOOST_UNIT
-	LIBRARIES artdaq-core_Utilities
-  MF_MessageLogger
+	LIBRARIES artdaq_core::artdaq-core_Utilities
+  messagefacility::MF_MessageLogger
 )
 
 cet_test(GenFile_t USE_BOOST_UNIT
-	LIBRARIES artdaq-core_Utilities
-  MF_MessageLogger
-)
\ No newline at end of file
+	LIBRARIES artdaq_core::artdaq-core_Utilities
+ messagefacility::MF_MessageLogger
+)
diff --git a/ups/product_deps b/ups/product_deps
old mode 100755
new mode 100644
index abc2e34..7a74ffc
--- a/ups/product_deps
+++ b/ups/product_deps
@@ -1,62 +1,350 @@
-# The parent line must be the first non-comment line in the file
-# This line defines the product name and version
-parent artdaq_core
-defaultqual	e20:s106
+########################################################################
+# product_deps
+#
+#   Define attributes of a package to be built and distributed as a UPS
+#   product.
+#
+# This file is parsed as a consequence of sourcing the
+# setup_for_development or setup_deps shell-agnostic scripts.
+#
+# Generated by cetmodules 2.29.02 at Wed Oct 06 17:15:11 GMT
+########################################################################
 
-# These optional lines define the installed directories where
-# headers, libraries, and executables will be found
-# Use them only if your product does not conform to the defaults
-# Format: directory_type directory_path directory_name
-# The only recognized values of the first field are incdir, libdir, and bindir
-# The only recognized values of the second field are product_dir and fq_dir
-# The third field is not constrained
-# The examples here reflect the defaults
-incdir      product_dir include
-libdir      fq_dir      lib
-bindir      fq_dir      bin
-fcldir      -
-perllib  product_dir
+####################################
+# Basic information.
+
+##################
+# parent
+##################
+#
+# The parent line - if present - must be the first non-comment line in
+# the file, defining the product's name and version. Any information not
+# specified will be taken from the CMake project(<project-name> VERSION
+# <dot-version>) call in the CMakeLists.txt in the parent directory to
+# the one containing this file.
+#
+# Recommended:
+#
+#>  parent <product-name>
+#
+# Deprecated (will produce a warning):
+#
+#>  parent <product-name> <product-ups-version> [<chain>]...
 
-old_style_config_vars
+##################
+# chain[s]
+##################
+#
+# List the UPS chains ("-c", -t, "new," "current," "old...") to be defined
+# for the package. The trailing `s' is optional and without meaning.
+# Multiple chains may be specified with one or more declarations.
+#
+#>  chains <chain>...
 
+##################
+# defaultqual
+##################
 #
-product			version		optional
-canvas_root_io	v1_09_04	s112
+# The default colon-delimited qualifier set used if one is not provided
+# to setup_for_development. Build type (debug, opt or prof) is optional.
+#
+# Deprecated - a qualifier should generally be provided to the
+# invocation of setup_for_development or setup_deps.
+#
+#>  defaultqual <qualifiers>
+
+##################
+# noarch
+##################
+#
+# Specify this keyword if the package is architecture-independent. This
+# does not necessarily imply a lack of qualifiers or of a
+# fully-qualified (fq) subdirectory in the installed package.
+#
+#>  noarch
+
+##################
+# no_fq_dir
+##################
+#
+# Specify this keyword if the UPS package should not have a
+# fully-qualified (fq) subdirectory in the installed package. This does
+# not necessarily imply noarch or a lack of qualifiers, but caution
+# should be observed if using this keyword for architecture-dependent
+# packages or those with qualifiers to avoid overwritten files when
+# multiple different variants of the package are installed in the same
+# UPS area.
+#
+#>  no_fq_dir
+
+##################
+# define_pythonpath
+##################
+#
+# If define_pythonpath is enabled, the appropriate path will be appended
+# to PYTHONPATH.
+#
+#>  define_pythonpath
+####################################
+parent		artdaq_core
+defaultqual	e20:s106
+####################################
+
+####################################
+# Directory specifications.
+#
+# These optional definitions specify the installed directories where
+# various files headers, libraries, and executables will be found. Some
+# have defaults; others must be specified if files of that type are to
+# be installed. Minimize configuration complexity by using only those
+# definitions necessary for the package.
+#
+##################
+# Notes:
+#
+# * Use directory specifications only if the defaults are inappropriate
+#   for your product.
+#
+# * A specification with defaults may be obviated by specifying a base
+#   of `-' as the only argument.
+#
+# * A directory will be created and appropriate UPS table file entries
+#   made *if and only if* files of that type are installed using the
+#   appropriate directive.
+#
+##################
+# Format:
+#
+#>  <spec>		<base>		[<subdir-name>]
+#
+# <base> may be `-' (negate defaults), "product_dir", or "fq_dir" as
+# desired.
+#
+# Available <spec>s and defaults:
+#
+#>  bindir		fq_dir		bin
+#
+#     Built binaries for public use.
+#
+#>  cmakemoduledir	product_dir	Modules
+#
+#     CMake modules.
+#
+#>  fcldir		product_dir	fcl
+#
+#     FHiCL framework configuration files.
+#
+#>  fwdir
+#
+#     Framework data.
+#
+#>  gdmldir		product_dir	gdml
+#
+#     GDML geometry description files.
+#
+#>  incdir		product_dir	include
+#
+#     Headers.
+#
+#>  libdir		fq_dir		lib
+#
+#     Compiled and other libraries.
+#
+#>  perllib		product_dir	perl5lib
+#
+#     Perl modules, etc.
+#
+#>  set_fwdir
+#
+#     An additional location for framework data to be added to
+#     FW_SEARCH_PATH; may be specified multiple times.
+#
+#>  set_wpdir
+#
+#     An additional location for wirecell data to be added to
+#     WIRECELL_PATH; may be specified multiple times.
+#
+#>  testdir		product_dir	test
+#
+#     Tests.
+#
+#>  wpdir
+#
+#     Wirecell data.
+#
+####################################
+bindir	fq_dir		bin
+fcldir	-
+incdir	product_dir	include
+libdir	fq_dir		lib
+perllib	product_dir
+####################################
+
+####################################
+# Product table.
+#
+# Table defining *all* direct UPS package dependencies.
+#
+##################
+# Format:
+#
+#>  product		version		qual	["<table_format=#>"]
+#>  <ups-product_name>	<ups-version>	[<qual-trigger>]	[<flag>]
+#>...
+#>  end_product_list
+#
+# <ups-version> may be a UPS version, a chain option (-c, -t, etc.) or a
+# chain name with a preceding `-'.
+#
+# Valid <qual-trigger> values:
+#
+# * [!]<single-qual>
+#
+#   A single qualifier whose presence in the parent's qualifier will
+#   trigger the setup of the specified version of the product. A prefix
+#   of `!' will negate the match.
+#
+# * <empty>|-
+#
+#   The specified version of the product will always be set up
+#   regardless of the parent's qualifiers. Use `-' as a placeholder if
+#   <flag> is to be specified.
+#
+# * -nq-
+#
+#   Specify explicitly that this product should be set up when the
+#   parent is unqualified.
+#
+# * -default-
+#
+#   The specified version of the product will be set up if no other
+#   product table entry for this product is applicable to the parent's
+#   qualifiers.
+#
+# Valid <flag> values:
+#
+# * only_for_build
+#
+#   The specified product will be set up for building only, and will not
+#   be added to the table file.
+#
+# * optional
+#
+#   It will not be an error if the specified product is not available to
+#   be set up.
+#
+##################
+# Notes.
+#
+# * Under older versions of the product table format ("<table_format=1>"
+#   or unspecified), -nq- had the same meaning as `-' above. When
+#   updating a product_deps file these entries should be reviewed when
+#   <table_format=2> is selected.
+#
+# * "<format>" is a valid alias for "<table_format>".
+#
+# * Under most circumstances (the parent is anything other than
+#   cetmodules), an entry for cetmodules is required.
+#
+# * It is an error for more than one non-(<qual-trigger> == "-default-")
+#   entry to match for a given product.
+#
+####################################
+product		version		qual	flags		<table_format=2>
+TRACE		v3_17_03	-
 canvas_root_io	v1_07_03	s110
-TRACE			v3_17_03
-cetmodules		v2_26_00	-	only_for_build
+canvas_root_io	v1_09_04	s112
+cetmodules	v2_29_02	-	only_for_build
 end_product_list
+####################################
 
-# -nq- means there is no qualifier
-# a "-" means the dependent product is not required by the parent and will not be setup
-qualifier		canvas_root_io	TRACE	notes
-c7:s112:debug	c7:debug		-nq-	-std=c++17
-c7:s112:prof	c7:prof			-nq-	-std=c++17
-e20:s112:debug	e20:debug		-nq-	-std=c++17
-e20:s112:prof	e20:prof		-nq-	-std=c++17
-e19:s112:debug	e19:debug		-nq-	-std=c++17
-e19:s112:prof	e19:prof		-nq-	-std=c++17
-
-c7:s110:debug	c7:debug		-nq-	-std=c++17
-c7:s110:prof	c7:prof			-nq-	-std=c++17
-e20:s110:debug	e20:debug		-nq-	-std=c++17
-e20:s110:prof	e20:prof		-nq-	-std=c++17
-e19:s110:debug	e19:debug		-nq-	-std=c++17
-e19:s110:prof	e19:prof		-nq-	-std=c++17
-
+####################################
+# Qualifier table.
+#
+# For each valid qualifer set of the parent, specify how dependencies
+# should be set up.
+#
+# Format:
+#
+#>  qualifier		<prod-spec>...	[<notes>]
+#>  <parent-qual>	<spec>...   [<text...>]
+#>...
+#>  end_qualifier_list
+#
+# <prod-spec> may be a product name or "compiler."
+#
+# <parent-qual> may be a colon-delimited qualifier set, or "-nq-" as a
+# column placeholder in the case of no parent qualifiers.
+#
+# Unless <prod-spec> is "compiler", <spec> may be a colon-delimited
+# qualifier set, or:
+#
+# * -
+#
+#   The dependency is not required for this <parent-qual> and will not
+#   be set up.
+#
+# * -nq-
+#
+#   The dependency will be set up without qualifiers.
+#
+# * -b- (deprecated)
+#
+#   A build-only dependency for this <parent-qual>. If the dependency is
+#   set up in this way, it will be set up without qualifiers. For more
+#   flexibility, use the product table to specify the only_for_build
+#   nature of the dependency and the qualifier table to specifiy how it
+#   should be set up.
+#
+# If <prod-spec> is "compiler", <spec> must be `-' (no compiler
+# required) or the name of the UPS product for the desired compiler. Any
+# qualifiers required to set up the compiler should be specified in the
+# appropriate column for that product.
+#
+##################
+# Notes.
+#
+# * A column for every product in the product table (see above) is
+#   *required* unless the only_for_build flag is specified, in which
+#   case it is optional.
+#
+####################################
+qualifier	canvas_root_io	TRACE	notes
+c7:s110:debug	c7:debug	-nq-	-std=c++17
+c7:s110:prof	c7:prof		-nq-	-std=c++17
+c7:s112:debug	c7:debug	-nq-	-std=c++17
+c7:s112:prof	c7:prof		-nq-	-std=c++17
+e19:s110:debug	e19:debug	-nq-	-std=c++17
+e19:s110:prof	e19:prof	-nq-	-std=c++17
+e19:s112:debug	e19:debug	-nq-	-std=c++17
+e19:s112:prof	e19:prof	-nq-	-std=c++17
+e20:s110:debug	e20:debug	-nq-	-std=c++17
+e20:s110:prof	e20:prof	-nq-	-std=c++17
+e20:s112:debug	e20:debug	-nq-	-std=c++17
+e20:s112:prof	e20:prof	-nq-	-std=c++17
 end_qualifier_list
+####################################
 
-
+####################################
+# Table fragment.
+#
+####################################
 table_fragment_begin
 # this is temporary until art and boost define ROOT_INCLUDE_PATH
 pathPrepend(ROOT_INCLUDE_PATH, ${ART_INC}:${FHICLCPP_INC}:${CETLIB_INC}:${BOOST_INC}:${ARTDAQ_CORE_INC})
 table_fragment_end
+####################################
+
+####################################
+# Backmatter.
 #
+# Comments and editor-specific metadata.
 
 # Preserve tabs and formatting in emacs and vi / vim:
 
 ### Local Variables:
-### tab-width: 4
+### mode: sh
+### tab-width: 8
 ### End:
 
-# vi:set ts=4 noexpandtab:
+# vi:set ts=8 noexpandtab:
diff --git a/ups/setup_deps b/ups/setup_deps
deleted file mode 100644
index 0311b41..0000000
--- a/ups/setup_deps
+++ /dev/null
@@ -1,239 +0,0 @@
-########################################################################
-# This script is shell-agnostic, which involves much acrobatics to avoid
-# causing errors in one interpreter or another (*stares in csh*).
-#
-# There should be as little as possible here, with most of the heavy
-# lifting done by other small scripts.
-#
-# When sourcing this file from a script, you may have to tell this
-# source file where it is via the fw_db shell (or env) variable, i.e.
-#    set fw_db=/some/path; source /some/path/this_file
-# or  fw_db=/some/path; . /some/path/this_file
-#
-# Generated by cetmodules 2.26.00 at Fri Aug 27 12:10:15 CDT 2021
-########################################################################
-
-########################################################################
-# NO USER-SERVICEABLE PARTS BELOW.
-########################################################################
-
-# Determine shell flavor.
-true && test $?shell = 1 && set _cetpkg_shell_flavor=csh || _cetpkg_shell_flavor=sh
-
-####################################
-# A common set of commands to use to hide as many shell flavor
-# differences as possible.
-
-##################
-# IMPORTANT NOTE:
-#
-# Following extensive tests in multiple shells, I have reached the
-# conclusion that it is not actually possible for a function to mirror
-# the semantics of an assignment with respect to the status code of ``
-# and compound statements joined with "||" or "&&". To handle this, we
-# write a large chunk of shell code to a temporary file in the current
-# directory a.k.a. CETPKG_BUILD with shell variable assignments correct
-# according to the shell flavor, and then source it. This also allows us
-# to deal with the fact that some shells don't pass arguments to sourced
-# scripts *stares harder in csh*.
-#
-# 2020-06-24 CHG.
-##################
-
-# If we're C-flavored, set up the commands using alias.
-test "$_cetpkg_shell_flavor" = csh && \
-  set _cetpkg_nobuild="nobuild" && \
-  set _cetpkg_shell_var_set=set\\1 && \
-  alias vecho_ 'if ($?vv == 1) echo \>\> \!*' && \
-  alias unsetenv_ unsetenv && \
-  alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && \
-  alias nullout "\!* >& /dev/null" && \
-  alias __TOP_EOF__ '' && \
-  alias return exit
-
-# For Bourne-flavored shells, use functions.
-test "$_cetpkg_shell_flavor" = sh && \
-  _cetpkg_nobuild="nobuild" && \
-  _cetpkg_shell_var_set= && \
-  eval 'vecho_() { test -n "${vv-}" && echo ">> $*"; return 0; }' && \
-  eval 'setenv() { eval "$1=\"\${2-}\"; export $1"; }' && \
-  eval 'unsetenv_() { unset "$@"; }' && \
-  eval 'source() { . "$@"; }' && \
-  eval 'tnotnull() { eval "test -n \"\${$1-}\""; }' && \
-  eval 'nullout() { "$@" >/dev/null 2>&1; }'
-####################################
-
-##################
-# Check for UPS (uses alias for return in C-flavored shells).
-test -z "$UPS_DIR" && \
-  ( echo ""; echo "ERROR: you MUST set up UPS"; echo "" ) && \
-  return 1 || true
-##################
-
-####################################
-# Need to find ourselves to set CETPKG_SOURCE.
-
-# Define empty variables for C-flavor shells to make things easier.
-test "$_cetpkg_shell_flavor" = csh && \
-  set _cetpkg_fw_db= _cetpkg_myself= _cetpkg_mydir=
-
-# If user has set fw_db, identify our top-level source directory now.
-test "$_cetpkg_shell_flavor" = csh && tnotnull fw_db && \
-  set _cetpkg_fw_db=`sh -c "cd $fw_db:q >/dev/null 2>&1 && /bin/pwd -P"` && \
-  vecho_ "found ourselves through fw_db" || true
-test "$_cetpkg_shell_flavor" = sh && tnotnull fw_db && \
-  _cetpkg_fw_db=`sh -c "cd \"$fw_db\" >/dev/null 2>&1 && /bin/pwd -P"` && \
-  vecho_ "found ourselves through fw_db" || true
-
-##################
-# For Bash and zsh, identify ourselves now so we don't have to go
-# through acrobatics later in the sourced script.
-test "$_cetpkg_shell_flavor" = sh && tnotnull BASH_SOURCE && \
-  _cetpkg_myself="$BASH_SOURCE" && test -n "$BASH_SOURCE" && \
-  vecho_ "found ourselves through BASH_SOURCE" || true
-test "$_cetpkg_shell_flavor" = sh -a -z "$_cetpkg_myself" && \
-  tnotnull ZSH_VERSION && eval '_cetpkg_myself="${(%):-%x}"' && \
-  test -n "$_cetpkg_myself" && \
-  vecho_ "found ourselves through ZSH prompt logic" || true
-test "$_cetpkg_shell_flavor" = sh && tnotnull _cetpkg_myself && \
-  _cetpkg_mydir=`dirname "$_cetpkg_myself"` && \
-  _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir >/dev/null 2>&1 && /bin/pwd -P"` || true
-##################
-
-##################
-# History is applicable only for interactive t/csh.
-test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh -a $?history = 0 && \
-  set history=5  || true
-test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh && \
-  set _cetpkg_mydir=`history 1|sed -Ee 's/^[[:space:][:digit:]:]*.*\bsource[[:space:]]+//'` && \
-  test -n "$_cetpkg_mydir" && set _cetpkg_mydir=`dirname $_cetpkg_mydir[1]:q` && \
-  set _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir:q >/dev/null 2>&1 && /bin/pwd -P"` && \
-  vecho_ 'setting db via interactive history' || true
-##################
-
-# Set CETPKG_SOURCE.
-test -n "$_cetpkg_fw_db" && \
-  vecho_ "_cetpkg_fw_db=$_cetpkg_fw_db" && \
-  setenv CETPKG_SOURCE `dirname $_cetpkg_fw_db` || \
-  printf "WARNING: please set shell or env. variable fw_db (to be the path to the\n\
-         framework source code). Fix this and other errors may go away.\n"
-####################################
-
-##################
-# Set CETPKG_BUILD.
-setenv CETPKG_BUILD `/bin/pwd -P`
-##################
-
-########################################################################
-# Write the rest of ourselves to a file and source it to handle status
-# code semantics for variable assignments.
-#
-# Note that even here we have to play a trick or two due to the fact
-# that we have to deal with the difference in the way sh- and csh-flavor
-# shells handle a quoted delimiter word for a HERE document: the latter
-# expect the delimiter to include the quoting; the former do not. This
-# is the reason for the C-flavored __TOP_EOF__ alias, and the explicit
-# return at the end of the sourced script.
-#
-########################################################################
-
-sed -Ee 's&\b__SET__([[:space:]]+)&'$_cetpkg_shell_var_set'&g' \
-  -e 's&__SETUP_ARGS__&'"$*"'&g' \
-  > ./setup_common.$_cetpkg_shell_flavor <<\__TOP_EOF__
-########################################################################
-
-####################################
-# Personality check: are we setup_deps or setup_for_development?
-#
-# If we're sourcing setup.in directly (e.g. for cetmodules itself) then
-# we select "setup_for_development" behavior, otherwise _cetpkg_nobuild
-# will be set appropriately by CMake's CONFIGURE() command for
-# setup_for_development or setup_deps.
-
-test -z "$_cetpkg_nobuild" -o "$_cetpkg_nobuild" = "--nobuild" || \
-  __SET__ _cetpkg_nobuild="" || true
-####################################
-
-####################################
-# Initial info.
-
-printf "\n";
-test -z "$_cetpkg_nobuild" && \
-  echo "The working build directory is $CETPKG_BUILD" || true
-cat <<EOF
-The source code directory is $CETPKG_SOURCE
-
----------------------- check this block for errors ---------------------
-EOF
-
-__SET__ _cetpkg_status=""
-####################################
-
-####################################
-# Attempt to find a suitable cetmodules to set up.
-
-__SET__ _cetpkg_cetmsetup=`sed -nE 's&^[[:space:]]*(cetmodules)[[:space:]]+([^[:space:]]+).*\bonly_for_build\b.*$&\1 \2&p' "$CETPKG_SOURCE/ups/product_deps"`
-test -z "_cetpkg_cetmsetup" -a ! -x "$CETPKG_SOURCE/libexec/set_dev_products" && \
-  __SET__ _cetpkg_status=1 && \
-  echo "ERROR: unable to find suitable cetmodules >= 2.00.00" || true
-test -n "$_cetpkg_status" -o -z "$_cetpkg_cetmsetup" || setup -B $_cetpkg_cetmsetup
-test $? != 0 && __SET__ _cetpkg_status=1 && \
-  echo "ERROR: setup of $_cetpkg_cetmsetup has failed" || true
-test -z "$_cetpkg_status$_cetpkg_cetmsetup" && setenv PATH `dropit -sfe "$CETPKG_SOURCE/bin"` && __SET__ _cetpkg_cettop="$CETPKG_SOURCE" || true
-test -z "$_cetpkg_status$_cetpkg_cettop" -a -n "$CETMODULES_DIR" && __SET__ _cetpkg_cettop="$CETMODULES_DIR"
-####################################
-
-####################################
-# Generate the setup script to set up dependencies.
-
-test -n "$_cetpkg_status" || \
-  __SET__ _cetpkg_setup="`${_cetpkg_cettop}/libexec/set_dev_products $_cetpkg_nobuild __SETUP_ARGS__`"
-test $? != 0 -o -z "$_cetpkg_setup" && __SET__ _cetpkg_status=1 && \
-  echo "ERROR: generation of setup script has failed" || true
-####################################
-
-####################################
-# Source the setup script to set up dependencies.
-
-test -n "$_cetpkg_status" || source "$_cetpkg_setup"
-test $? != 0 && __SET__ _cetpkg_status=1 && \
-  echo "ERROR: setup of required products has failed" || true
-__SET__ _cetpkg_setup_errlog="$CETPKG_BUILD/cetpkg_setup.err"
-test -s "$_cetpkg_setup_errlog" && cat "$_cetpkg_setup_errlog" || \
-  rm -f "$_cetpkg_setup_errlog"
-####################################
-
-cat <<EOF
-------------------------------------------------------------------------
-
-EOF
-
-# Final sanity check and report.
-test -n "$_cetpkg_status" -o -n "$_cetpkg_nobuild" || \
-  "$_cetpkg_cettop/libexec/verify_build_environment" "$CETPKG_BUILD"
-test $? != 0 && __SET__ _cetpkg_status=1 && \
-  echo "ERROR: unable to verify build environment" || true
-
-####################################
-# Clean up before exiting.
-
-# Clean up C-flavor aliases and prepare to return^H^H^H^H^H^Hexit.
-test "$_cetpkg_shell_flavor" = csh && \
-  unalias vecho_ unsetenv_ tnotnull nullout __TOP_EOF__ return && \
-  set return=exit || return=return
-
-# Finish cleanup and exit. Note the use of eval so we can unset
-# everything including $return and $_cetpkg_status.
-eval "unset vecho_ setenv unsetenv_ source tnotnull nullout "\
-"_cetpkg_nobuild _cetpkg_shell_var_set "\
-"_cetpkg_fw_db _cetpkg_myself _cetpkg_mydir _cetpkg_cetmsetup "\
-"_cetpkg_cettop _cetpkg_setup _cetpkg_setup_errlog "\
-"_cetpkg_shell_flavor return _cetpkg_status; \
-$return $_cetpkg_status"
-####################################
-
-########################################################################
-\__TOP_EOF__
-__TOP_EOF__
-
-source ./setup_common.$_cetpkg_shell_flavor
diff --git a/ups/setup_for_development b/ups/setup_for_development
index d705c1b..744ba16 100644
--- a/ups/setup_for_development
+++ b/ups/setup_for_development
@@ -10,7 +10,7 @@
 #    set fw_db=/some/path; source /some/path/this_file
 # or  fw_db=/some/path; . /some/path/this_file
 #
-# Generated by cetmodules 2.26.00 at Fri Aug 27 12:10:15 CDT 2021
+# Generated by cetmodules 2.29.02 at Wed Oct 06 17:15:11 GMT
 ########################################################################
 
 ########################################################################
