diff --git a/artdaq-database/SWIGBindings/python/PythonAddon.cmake b/artdaq-database/SWIGBindings/python/PythonAddon.cmake
index 42d4e55..2ad73ce 100644
--- a/artdaq-database/SWIGBindings/python/PythonAddon.cmake
+++ b/artdaq-database/SWIGBindings/python/PythonAddon.cmake
@@ -1,37 +1,17 @@
-
-set(CAN_BUILD true)
-
-if(NOT EXISTS "$ENV{PYTHON_DIR}")
-    message("Directory \"$ENV{PYTHON_DIR}\" does not exist, can't build Python addons!")
-  set(CAN_BUILD false)
-endif(NOT EXISTS "$ENV{PYTHON_DIR}")
-
-if(NOT EXISTS "$ENV{SWIG_DIR}")
-    message("Directory \"$ENV{SWIG_DIR}\" does not exist, can't build Python addons!")
-  set(CAN_BUILD false)
-endif(NOT EXISTS "$ENV{SWIG_DIR}")
-
-
-if(CAN_BUILD)
-  #find_ups_product(swig v3)
-  #include(FindSWIG)
-
-  FIND_PACKAGE(SWIG REQUIRED) 
-  INCLUDE(${SWIG_USE_FILE})
+FIND_PACKAGE(SWIG REQUIRED) 
+INCLUDE(${SWIG_USE_FILE})
   
-  FIND_PACKAGE(Python3 COMPONENTS Development)
-endif(CAN_BUILD)
+FIND_PACKAGE(Python3 COMPONENTS Development)
 
 macro (create_python_addon)
-    if(CAN_BUILD)
-        set(cet_file_list "")
-        set(create_python_addon_usage "USAGE: create_python_addon( [ADDON_NAME <addon name>] [LIBRARIES <library list>] [INCLUDES <include directories>])")
-        #message(STATUS "create_python_addon debug: called with ${ARGN} from ${CMAKE_CURRENT_SOURCE_DIR}")
-        cmake_parse_arguments( PIA "" "" "ADDON_NAME;LIBRARIES;INCLUDES" ${ARGN})
-        # there are no default arguments
-        if( PIA_DEFAULT_ARGS )
-            message(FATAL_ERROR  " undefined arguments ${CNA_DEFAULT_ARGS} \n ${create_python_addon_usage}")
-        endif()
+    set(cet_file_list "")
+    set(create_python_addon_usage "USAGE: create_python_addon( [ADDON_NAME <addon name>] [LIBRARIES <library list>] [INCLUDES <include directories>])")
+    #message(STATUS "create_python_addon debug: called with ${ARGN} from ${CMAKE_CURRENT_SOURCE_DIR}")
+    cmake_parse_arguments( PIA "" "" "ADDON_NAME;LIBRARIES;INCLUDES" ${ARGN})
+    # there are no default arguments
+    if( PIA_DEFAULT_ARGS )
+        message(FATAL_ERROR  " undefined arguments ${CNA_DEFAULT_ARGS} \n ${create_python_addon_usage}")
+    endif()
 		
     file(GLOB PIA_SOURCES  *.i)
     file(GLOB LIB_SOURCES  *.cpp)
@@ -43,7 +23,7 @@ macro (create_python_addon)
     INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
 
     #swig_add_module (${PIA_ADDON_NAME} python ${PIA_SOURCES} ${LIB_SOURCES})
-	swig_add_library(${PIA_ADDON_NAME} LANGUAGE python SOURCES ${PIA_SOURCES} ${LIB_SOURCES})
+  	swig_add_library(${PIA_ADDON_NAME} LANGUAGE python SOURCES ${PIA_SOURCES} ${LIB_SOURCES})
     swig_link_libraries (${PIA_ADDON_NAME} ${PIA_LIBRARIES} Python3::Python)
     
 		message("CMAKE_CXX_COMPILER is ${CMAKE_CXX_COMPILER}")
@@ -55,24 +35,13 @@ macro (create_python_addon)
 
     set(PIA_ADDON_LIBNAME _${PIA_ADDON_NAME})
 
-    set( mrb_build_dir $ENV{MRB_BUILDDIR} )
-    if( mrb_build_dir )
-        set( this_build_path ${mrb_build_dir}/${product} )
-    else()
-        set( this_build_path $ENV{CETPKG_BUILD} )
-    endif()
-
     add_custom_command(TARGET ${PIA_ADDON_NAME} POST_BUILD 
-        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PIA_ADDON_NAME}.py ${this_build_path}/${artdaq_LIBRARY_DIR})
+        COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_INSTALL_PREFIX}/bin
+        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PIA_ADDON_NAME}.py ${CMAKE_INSTALL_PREFIX}/bin )
 
-    install (FILES ${this_build_path}/${artdaq_database_LIBRARY_DIR}/${PIA_ADDON_LIBNAME}.so 
+    install (FILES ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${PIA_ADDON_LIBNAME}.so 
       PERMISSIONS OWNER_EXECUTE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_READ WORLD_EXECUTE
-      DESTINATION ./${flavorqual_dir}/python/)
-
-    install (FILES ${this_build_path}/${PIA_ADDON_NAME}.py DESTINATION ./${flavorqual_dir}/python/)
-
+      DESTINATION ${CMAKE_INSTALL_PREFIX}/python/)
 
-    else(CAN_BUILD)
-        message("Compatible version of Swig found. NOT building ${PIA_ADDON_NAME}")
-    endif(CAN_BUILD)
+    install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${PIA_ADDON_NAME}.py DESTINATION ${CMAKE_INSTALL_PREFIX}/python/)
 endmacro()
